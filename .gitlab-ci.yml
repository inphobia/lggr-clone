# This file is a template, and might need editing before it works on your project.
# Select image from https://hub.docker.com/_/php/
image: php:7.0-apache

stages:
  - setup
  - test

# Set any variables we need
variables:
  MYSQL_DATABASE: $MYSQL_DB
  MYSQL_ROOT_PASSWORD: $MYSQL_PASS

cache:
  paths:
  - vendor/
  - /var/www/html/
  key: "$CI_COMMIT_REF_SLUG"

# Bring in any services we need http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
# See http://docs.gitlab.com/ce/ci/services/README.html for examples.
#  - name: mariadb:10.1
#    alias: database
services:
  - name: mariadb:10.1
    alias: mysql
  - redis:latest

websetup:
  stage: setup
  # Select what we should cache between builds (composer data)
  script:
  - pwd
  - apt-get update -yqq
  - apt-get install -yqq wget git zip
  # Install composer dependencies
  - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
  - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  - php -r "if (hash_file('SHA384', 'composer-setup.php') === file_get_contents('installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
  - php composer-setup.php
  - php -r "unlink('composer-setup.php'); unlink('installer.sig');"
  - php composer.phar --no-interaction --quiet install
  # copy our project stuff
  - cp -a * /var/www/html/
  - cd /var/www/html && pwd && ls -la
  - sed -i "s/localhost/database/" /var/www/html/inc/Config.php
  - cd; tar cfz webfolder.tar.gz /var/www/html; ls -l
  artifacts:
    paths:
    - webfolder.tar.gz

unittest:
  stage: test
  before_script:
  - apt-get update -yqq
  - apt-get install -yqq git mysql-client
  - cat doc/db.sql | mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql
  - cat doc/user.sql | mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql "$MYSQL_DATABASE"
  - php /var/www/html/admin/db_prefill.php
  script:
  - cd /var/www/html
  - php composer.phar test

webtest:
  stage: test
  before_script:
  - apt-get update -yqq
  - apt-get install -yqq git mysql-client
  - cat doc/db.sql | mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql
  - cat doc/user.sql | mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql "$MYSQL_DATABASE"
  - php /var/www/html/admin/db_prefill.php
  script:
  - pwd
  - ls -la
  - cd /var/www/html
  - ls -la
  - cd /tmp
  - wget -S -O - http://127.0.0.1/

